<?xml version="1.0" encoding="UTF-8"?>
<quiz>
<!-- question: 372  -->
  <question type="stack">
    <name>
      <text>Tune 3D polynomial (minimal example)</text>
    </name>
    <questiontext format="html">
      <text><![CDATA[<p style="display: none">[[input:ansa]] [[validation:ansa]]</p>

We are given the function \(F(x,y) = {@fxy@}\) where the parameter \({@tunable@}\) is unknown. 
are unknown. The figure below shows the correct function, 
along with a function where you can tune the unknown parameter with the slider. 
Find the correct function by manipulating the slider.

[[jsxgraph input-ref-ansa="ansaRef"]]

   //Create the board
   var board = JXG.JSXGraph.initBoard(divid, {
      boundingbox: [-8, 8, 8, -8],
      keepaspectratio: false,
      axis: false
   });

   //Create the 3D-view
   var boxz = [-7, 7];
   var boxx = [-7,7];
   var boxy = [-7,7];
   var view = board.create('view3d', [[-6, -3], [8, 8], [boxx, boxy, boxz]], {
      xPlaneRear: {visible: false},
      yPlaneRear: {visible: false},
   });

   // Get the name of the tunable parameter from maxima
   var tunable_param = "{#tunable#}";

   //Create tunable slider - make sure to give it the correct name
   //from var tunable_param, this makes it "influence" the graph-function
   var tuning_slider = board.create('slider', 
      [[-7, -6], [5, -6], [-4,0,4]], 
      { name: tunable_param }
   );

   /*
    * Parse the function expressions with and without 
    * known parameter from maxima. The Jessie code parsing
    * returns a callable function, and variables with the same name as
    * any sliders on the board gets the value of the sliders
    */
   var func_tunable = board.jc.snippet('{#fxy#}', true, 'x,y', false);
   var func = board.jc.snippet('{#fxy2#}', true, 'x,y', false);

   //Create the functiongraphs of both functions
   var graph_tunable = view.create('functiongraph3d', 
      [func_tunable, boxx, boxy], {
      strokeColor: JXG.palette.blue,
      stepsU: 50, stepsV: 50, strokeWidth: 0.5
   });
   var graph = view.create('functiongraph3d', [func, boxx, boxy], {
      strokeColor: JXG.palette.red,
      stepsU: 50, stepsV: 50, strokeWidth: 0.5
   });

   /*
    * Bind the parameter-slider to the stack answer variable
    * The answerfield will contain the value of the slider, 
    * and when the page reloads the slider will load any previous value
    * from the answerfield (remember to call board.update() to show this effect)
    */
   stack_jxg.bind_slider(ansaRef, tuning_slider);
   board.update();

          
[[/jsxgraph]]]]></text>
    </questiontext>
    <generalfeedback format="html">
      <text></text>
    </generalfeedback>
    <defaultgrade>1</defaultgrade>
    <penalty>0.1</penalty>
    <hidden>0</hidden>
    <idnumber></idnumber>
    <stackversion>
      <text>2023010400</text>
    </stackversion>
    <questionvariables>
      <text>/*Generate list with 3 random values for the coefficients*/
coef: makelist(rand_with_prohib(-4,4,[0]),3);

/*Polynomial with parameters a,b,c*/
func : b*y^2+a*x*y+c*x^2;

/*List of all parameter values*/
all_param: [a=coef[1], b=coef[2], c=coef[3]];

/*List of non-tunable parameter values (b,c)*/
non_tunable: [b=coef[2], c=coef[3]];

/*Tunable parameter*/
tunable:a;

/*x,y domains*/
xrang:[-7,7];
yrang:[-7,7];

/*Tolerance*/
maxError:0.2;

/*Function evaluated with all parameters*/
fxy2:ev(func, all_param);

/*Function evaluated without unknown parameter value*/
fxy:ev(func,non_tunable);</text>
    </questionvariables>
    <specificfeedback format="html">
      <text>[[feedback:prt1]]</text>
    </specificfeedback>
    <questionnote>
      <text>{@fxy@}</text>
    </questionnote>
    <questionsimplify>1</questionsimplify>
    <assumepositive>0</assumepositive>
    <assumereal>0</assumereal>
    <prtcorrect format="html">
      <text><![CDATA[<span style="font-size: 1.5em; color:green;"><i class="fa fa-check"></i></span> Correct answer, well done.]]></text>
    </prtcorrect>
    <prtpartiallycorrect format="html">
      <text><![CDATA[<span style="font-size: 1.5em; color:orange;"><i class="fa fa-adjust"></i></span> Your answer is partially correct.]]></text>
    </prtpartiallycorrect>
    <prtincorrect format="html">
      <text><![CDATA[<span style="font-size: 1.5em; color:red;"><i class="fa fa-times"></i></span> Incorrect answer.]]></text>
    </prtincorrect>
    <multiplicationsign>dot</multiplicationsign>
    <sqrtsign>1</sqrtsign>
    <complexno>i</complexno>
    <inversetrig>cos-1</inversetrig>
    <logicsymbol>lang</logicsymbol>
    <matrixparens>[</matrixparens>
    <variantsselectionseed></variantsselectionseed>
    <input>
      <name>ansa</name>
      <type>numerical</type>
      <tans>coef[1]</tans>
      <boxsize>15</boxsize>
      <strictsyntax>1</strictsyntax>
      <insertstars>0</insertstars>
      <syntaxhint></syntaxhint>
      <syntaxattribute>0</syntaxattribute>
      <forbidwords></forbidwords>
      <allowwords></allowwords>
      <forbidfloat>0</forbidfloat>
      <requirelowestterms>0</requirelowestterms>
      <checkanswertype>0</checkanswertype>
      <mustverify>0</mustverify>
      <showvalidation>0</showvalidation>
      <options></options>
    </input>
    <prt>
      <name>prt1</name>
      <value>1.0000000</value>
      <autosimplify>1</autosimplify>
      <feedbackstyle>1</feedbackstyle>
      <feedbackvariables>
        <text>sans:ansa;
tans:coef[1];</text>
      </feedbackvariables>
      <node>
        <name>0</name>
        <answertest>NumAbsolute</answertest>
        <sans>sans</sans>
        <tans>tans</tans>
        <testoptions>maxError</testoptions>
        <quiet>0</quiet>
        <truescoremode>=</truescoremode>
        <truescore>1.0000000</truescore>
        <truepenalty></truepenalty>
        <truenextnode>-1</truenextnode>
        <trueanswernote>prt1-1-T</trueanswernote>
        <truefeedback format="html">
          <text><![CDATA[Correct!<br>]]></text>
        </truefeedback>
        <falsescoremode>=</falsescoremode>
        <falsescore>0.0000000</falsescore>
        <falsepenalty></falsepenalty>
        <falsenextnode>-1</falsenextnode>
        <falseanswernote>prt1-1-F</falseanswernote>
        <falsefeedback format="html">
          <text>Incorrect</text>
        </falsefeedback>
      </node>
    </prt>
  </question>

</quiz>